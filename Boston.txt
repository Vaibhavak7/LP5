import pandas as pd `
df = pd.read_csv("1_boston_housing.csv")`
df`
for i in df.columns:
    df[i].fillna(df[i].mean(),inplace=True)`
df.corr()['MEDV'].sort_values()'
from sklearn.model_selection import train_test_split

X = df.loc[:,df.columns!='MEDV']
Y = df.loc[:,df.columns=='MEDV']

X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.25,random_state=123)`
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(X_train)
X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)`
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
model = Sequential()
model.add(Dense(128, input_shape=(13,), activation = 'relu', name = 'layer1'))
model.add(Dense(64,activation='relu',name = 'layer2'))
model.add(Dense(1,activation ='linear',name ='output_layer'))
model.compile(optimizer='adam',loss='mse',metrics=['mae'])
model.summary()`
history = model.fit(X_train,Y_train,epochs=100,validation_split=0.05,verbose=1)`
Y_pred = model.predict(x=X_test)`
for pred, actual in zip(Y_pred,Y_test.values):
  print(f"Predicted : {pred}, Actual : {actual}")`
mse, mae = model.evaluate(X_test,Y_test)

print("Mean Absolute Error in Prediction : ", mae)
print("Mean Squared Error in Prediction : ", mse)`
