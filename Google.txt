import pandas as pd
df = pd.read_csv("google.csv")`
df`
import matplotlib.pyplot as plt
plt.figure(figsize=(16,8))
plt.title("Google Stock Price History")
plt.plot(df['Close'])
plt.xlabel('Year')
plt.ylabel('Close Price USD $')
plt.show()`
data = df.filter(['Close'])`
dataset = data.values`
from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler(feature_range=(0,1))
scaled_data = scaler.fit_transform(dataset)`
import numpy as np
training_data_len = int(np.ceil(0.8*len(dataset)))`
train_data = scaled_data[0:training_data_len,:]`
time_steps = 30`
X_train =[]
Y_train =[]
for i in range(time_steps, len(train_data)):
  X_train.append(train_data[i-time_steps:i,0])
  Y_train.append(train_data[i,0])`
X_train = np.array(X_train)
Y_train = np.array(Y_train)`
X_train = np.reshape(X_train, (X_train.shape[0],X_train.shape[1],1))`
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.layers import LSTM
model = Sequential()
model.add(LSTM(50,return_sequences=True,input_shape=(X_train.shape[1],1)))
model.add(LSTM(50,return_sequences=False))
model.add(Dense(25))
model.add(Dense(1))
model.compile(optimizer="adam",loss="mse")`
model.fit(X_train,Y_train,batch_size=1,epochs=5)`
test_data = scaled_data[training_data_len-time_steps:,:]`
X_test = []
Y_test = scaled_data[training_data_len:,:]
for i in range(time_steps,len(test_data)) :
  X_test.append(test_data[i-time_steps:i,0])`
X_test = np.array(X_test)
X_test = np.reshape(X_test,(X_test.shape[0],X_test.shape[1],1))`
predictions = model.predict(X_test)
predictions = scaler.inverse_transform(predictions)`
train = data[:training_data_len]
output = data[training_data_len:]
output['Predictions'] = predictions

plt.figure(figsize=(16,8))
plt.title('Google Stock Price Prediction')
plt.xlabel('Year', fontsize=18)
plt.ylabel('Close Price USD ($)', fontsize=18)
plt.plot(train['Close'])
plt.plot(output[['Close', 'Predictions']])
plt.legend(['Train', 'Actual', 'Predictions'], loc='lower right')
plt.show()`